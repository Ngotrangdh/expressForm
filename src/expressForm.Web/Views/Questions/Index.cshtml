@model expressForm.Web.Controllers.FormQuestionViewModel
@using expressForm.Web.Models

@{
    ViewData["Title"] = "Question";
}

@section Scripts{
    <script type="text/javascript" src="~/js/site.js"></script>
}

@{ 
    string formId = null;
    string questionId = null;
    if (Context.Request.RouteValues["formId"] == null)
    {
        formId = Model.Form.Id.ToString();
    }
    else
    {

        formId = Context.Request.RouteValues["formId"].ToString();
    }

    if (Context.Request.RouteValues["questionId"] == null)
    {
        questionId= Model.Question.Id.ToString();
    }
    else
    {
        questionId = Context.Request.RouteValues["questionId"].ToString();
    }
}

@{
    var routeValues = new Dictionary<string, string>()
{
                                {"formId", formId },
                                {"questionId", Model.Question.Id.ToString() }
};
}

<div class="row bg-light justify-content-center">
    <h2>@ViewData["Title"]</h2>
</div>

<div class="row">
    <div class="col-md-12">
        <h3>@Model.Form.Title</h3>
        <p>@Model.Form.Description</p>
    </div>
</div>

<hr />

<div class="row">
    <div class="col-md-4">
        <ul class="list-group">
            @if (Model.HasQuestions)
            {
                @foreach (var question in @Model.Questions)
                {
                    <li class="list-group-item">@question.Text</li>
                }
            }
            else
            {
                <li class="list-group-item">This Form has no questions</li>
            }
        </ul>
    </div>
    <div class="col-md-6 bg-light p-3">
        <form asp-action="Create" asp-all-route-data="routeValues">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <input class="form-control" asp-for="@Model.Question.Text" />
            </div>
            @*<ul>
                    <li>
                        <div class="form-group">
                            <input class="form-control" asp-for="@Model.Question.Options" />
                        </div>
                    </li>
                </ul>*@
            <button class="btn btn-primary">Save</button>
            <button class="btn btn-secondary">Cancel</button>
        </form>
    </div>
    <div class="col-md-2">
        <form asp-action="QuestionTypeChange" id="QuestionTypeForm" asp-all-route-data="routeValues">
            <div class="form-group">
                <select class="form-control" asp-for="Question.Type" asp-items="@Html.GetEnumSelectList<QuestionTypeViewModel>()" onchange="QuestionTypeForm.submit()">
                </select>
            </div>
        </form>
        <form asp-action="QuestionRequired" id="QuestionRequired" asp-all-route-data="routeValues">
            <div class="form-check">
                <input asp-for="@Model.Question.IsRequired" onclick="QuestionRequired.submit()" />
                <label class="form-check-label" asp-for="@Model.Question.IsRequired">Required</label>
            </div>
        </form>

    </div>
</div>
<hr />
<div class="text-center">
    <a asp-action="Question">Add Question</a>
</div>




